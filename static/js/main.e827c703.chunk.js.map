{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccount","BusinessCenter","Chat","Notifications","signOut","Sidebar","recentItem","topic","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlined","ChatOutlined","ShareOutlined","SendOutlined","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","Create","value","onChange","e","target","preventDefault","add","timeStamp","FieldValue","serverTimestamp","Image","Subscriptions","EventNote","CalendarViewDay","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","FiberManualRecord","Info","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e827c703.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const {login, logout} = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React from 'react';\r\nimport \"./HeaderOption.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\n\r\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\">\r\n            {Icon && <Icon className=\"headerOption__icon\"/>}\r\n            {avatar && (\r\n                <Avatar className=\"headerOption__icon\" src={user?.photoUrl}>{user?.email[0]}\r\n                </Avatar>\r\n            )}\r\n            \r\n            <h3 className=\"headerOption__title\">{title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption;\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDL0Ah63r85NnFsihKiqoKifH22qxsl2rI\",\r\n    authDomain: \"linkedin-clone-97dd3.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-97dd3\",\r\n    storageBucket: \"linkedin-clone-97dd3.appspot.com\",\r\n    messagingSenderId: \"5855757038\",\r\n    appId: \"1:5855757038:web:ca72c7a9f8e8578a2629ff\",\r\n    measurementId: \"G-PLW025D7Y7\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n  \r\nexport { db, auth };","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { BusinessCenter, Chat, Notifications, SupervisorAccount } from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from './features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n    const logoutOfApp = () => {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"\"/>\r\n                <div className=\"header__search\">\r\n                    <SearchIcon/>\r\n                    <input placeholder=\"Search\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title=\"Home\" />\r\n                <HeaderOption Icon={SupervisorAccount} title=\"My Network\" />\r\n                <HeaderOption Icon={BusinessCenter} title=\"Jobs\" />\r\n                <HeaderOption Icon={Chat} title=\"Messaging\" />\r\n                <HeaderOption Icon={Notifications} title=\"Notifications\" />\r\n                <HeaderOption \r\n                    avatar={true}\r\n                    title=\"Me\"\r\n                    onClick={logoutOfApp}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"https://media-exp3.licdn.com/dms/image/C5616AQFDhihGV317JQ/profile-displaybackgroundimage-shrink_350_1400/0/1618682084857?e=1631145600&v=beta&t=hL2pc81Gsv-zsGuHa8t2a_HlwkgV0SS-Mc9GR-5215g\" alt=\"\"/>\r\n                <Avatar src={user.photoUrl} className=\"sidebar__avatar\"/>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viewed you</p>\r\n                    <p className=\"sidebar__statNumber\">3,743</p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views on post</p>\r\n                    <p className=\"sidebar__statNumber\">3,011</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p>\r\n                {recentItem('reactjs')}\r\n                {recentItem('programming')}\r\n                {recentItem('webdevelopment')}\r\n                {recentItem('sde')}\r\n                {recentItem('developer')}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './InputOption.css';\r\n\r\nfunction InputOption({Icon, title, color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{color: color}}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputOption;\r\n","import { Avatar } from '@material-ui/core';\r\nimport { ChatOutlined, SendOutlined, ShareOutlined, ThumbUpAltOutlined } from '@material-ui/icons';\r\nimport React, {forwardRef} from 'react';\r\nimport InputOption from './InputOption';\r\nimport \"./Post.css\";\r\n\r\nconst Post = forwardRef(({name, description, message, photoUrl}, ref) => {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n            <div className=\"post__buttons\">\r\n                <InputOption Icon={ThumbUpAltOutlined} title=\"Like\" color=\"gray\"/>\r\n                <InputOption Icon={ChatOutlined} title=\"Comment\" color=\"gray\"/>\r\n                <InputOption Icon={ShareOutlined} title=\"Share\" color=\"gray\"/>\r\n                <InputOption Icon={SendOutlined} title=\"Send\" color=\"gray\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Post;\r\n","import { CalendarViewDay, Create, EventNote, Image, Subscriptions } from '@material-ui/icons';\r\nimport React, {useEffect, useState} from 'react';\r\nimport \"./Feed.css\";\r\nimport { db } from './firebase';\r\nimport InputOption from './InputOption';\r\nimport Post from './Post';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n    const user = useSelector(selectUser);\r\n    const [input, setInput] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"timeStamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n            setPosts(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n            )\r\n        );\r\n     }, []);\r\n\r\n    const sendPost = e => {\r\n        e.preventDefault();\r\n        db.collection(\"posts\").add({\r\n            name: user.displayName,\r\n            description: user.email,\r\n            message: input,\r\n            photoUrl: user.photoUrl || \"\",\r\n            timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className='feed'>\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <Create />\r\n                    <form>\r\n                        <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\"/>\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption Icon={Image} title=\"Photo\" color=\"#70B5F9\"/>\r\n                    <InputOption Icon={Subscriptions} title=\"Video\" color=\"#E7A33E\"/>\r\n                    <InputOption Icon={EventNote} title=\"Event\" color=\"#C0CBCD\"/>\r\n                    <InputOption Icon={CalendarViewDay} title=\"Write article\" color=\"#7FC15E\"/>\r\n                </div>\r\n            </div>\r\n            <FlipMove>\r\n                {posts.map(({id, data: {name, description, message, photoUrl}}) => (\r\n                    <Post \r\n                        key = {id}\r\n                        name = {name}\r\n                        description = {description}\r\n                        message = {message}\r\n                        photoUrl = {photoUrl}\r\n                    />\r\n                ))}\r\n            </FlipMove>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;\r\n","import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { auth } from './firebase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const loginToApp = (e) =>{\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .then(userAuth => {\r\n            dispatch(login({\r\n                email: userAuth.user.email,\r\n                uid: userAuth.user.uid,\r\n                displayName: userAuth.user.displayName,\r\n                profileUrl: userAuth.user.photoURL,\r\n            }))\r\n        }).catch((error) => alert(error));\r\n    };\r\n    const register = () => {\r\n        if(!name){\r\n            return alert(\"Please enter a full name!\");\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then((userAuth) => {\r\n            userAuth.user.updateProfile({\r\n                displayName: name,\r\n                photoURL: profilePic,\r\n            })\r\n            .then(() => {\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: name,\r\n                    photoURL: profilePic\r\n                }));\r\n            });\r\n        }).catch((error) => alert(error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo.svg__1.png\" alt=\"\"/>\r\n            <form>\r\n                <input \r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Full name (required if registering)\" \r\n                    type=\"text\"\r\n                />\r\n                <input \r\n                    value={profilePic}\r\n                    onChange={(e) => setProfilePic(e.target.value)}\r\n                    placeholder=\"Profile pic URL (optional)\" \r\n                    type=\"text\"\r\n                />\r\n                <input\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\" \r\n                    type=\"email\"\r\n                />\r\n                <input\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\" type=\"password\"\r\n                />\r\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\r\n            </form>\r\n            <p>Not a member?{\" \"}\r\n                <span className=\"login__register\" onClick={register}>Register Now</span>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { FiberManualRecord, Info } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport './Widgets.css';\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle = (heading, subtitle) => (\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n                <FiberManualRecord/>\r\n            </div>\r\n            <div className=\"widgets__articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>LinkedIn News</h2>\r\n                <Info/>\r\n            </div>\r\n            {newsArticle(\"Rex is deploying!\", \"Top news - 8,772 readers\")}\r\n            {newsArticle(\"Apple pushes back on remote work\", \"4d ago - 107,772 readers\")}\r\n            {newsArticle(\"Latest recruiting perk: WFH forever\", \"5d ago - 53,470 readers\")}\r\n            {newsArticle(\"Moderna vaccination gets approval\", \"5d ago - 141,010 readers\")}\r\n            {newsArticle(\"Keep calm and job hunt\", \"5d ago - 1,027 readers\")}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgets;\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport Widgets from './Widgets';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    auth.onAuthStateChanged(userAuth => {\n      if(userAuth){\n        dispatch(login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName,\n          photoUrl: userAuth.photoURL,\n        }));\n      } else {\n        dispatch(logout());\n      }\n    })\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <Header/>\n      \n      {!user ? (\n        <Login />\n      ): (\n        <div className=\"app__body\">\n          <Sidebar />\n          <Feed />\n          <Widgets />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n// export default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}